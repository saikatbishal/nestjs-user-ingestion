version: "3.8"

# ===========================================
# Development Environment Configuration
# ===========================================

services:
  # ===========================================
  # NestJS Application (Development)
  # ===========================================
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: development
    container_name: nestjs-app-dev
    restart: unless-stopped
    ports:
      - "${APP_PORT:-3000}:3000"
      - "9229:9229" # Debug port
    environment:
      NODE_ENV: development
      # Database Configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${DB_USER:-postgres}
      DB_PASS: ${DB_PASS:-saikatbishal}
      DB_NAME: ${DB_NAME:-nestjs_docs}
      # Redis Configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      # JWT Configuration
      JWT_SECRET: ${JWT_SECRET:-dev-jwt-secret}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-dev-refresh-secret}
      # Development Configuration
      CHOKIDAR_USEPOLLING: true
      UPLOAD_PATH: ./uploads
      MAX_FILE_SIZE: 10485760
    volumes:
      - ../src:/app/src:ro
      - ../package.json:/app/package.json:ro
      - ../tsconfig.json:/app/tsconfig.json:ro
      - ../jest.config.js:/app/jest.config.js:ro
      - app_uploads:/app/uploads
      - app_logs:/app/logs
      - /app/node_modules
    networks:
      - nestjs-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run start:dev

  # ===========================================
  # PostgreSQL Database (Development)
  # ===========================================
  postgres:
    extends:
      file: docker-compose.yml
      service: postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-nestjs_docs_dev}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASS:-saikatbishal}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./postgres/init-dev.sql:/docker-entrypoint-initdb.d/init.sql:ro

  # ===========================================
  # Redis (Development)
  # ===========================================
  redis:
    extends:
      file: docker-compose.yml
      service: redis
    volumes:
      - redis_dev_data:/data

  # ===========================================
  # Test Database (for running tests)
  # ===========================================
  postgres-test:
    image: postgres:15-alpine
    container_name: nestjs-postgres-test
    environment:
      POSTGRES_DB: ${TEST_DB_NAME:-nestjs_docs_test}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASS:-saikatbishal}
    ports:
      - "${TEST_DB_PORT:-5433}:5432"
    networks:
      - nestjs-network
    profiles:
      - testing

# ===========================================
# Development Networks
# ===========================================
networks:
  nestjs-network:
    driver: bridge

# ===========================================
# Development Volumes
# ===========================================
volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  app_uploads:
    driver: local
  app_logs:
    driver: local
